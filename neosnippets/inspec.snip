include ruby.snip

# Added snippet for aide_conf

snippet apache     
abbr create apache inspec
  describe apache do
    its('${1:#:setting_name}') { should cmp '${2:#:value}' }
  end
${0}

snippet apache_conf
abbr create apache_conf inspec
  describe apache do
    its('${1:#:setting_name}') { should cmp '${2:#:value}' }
  end
${0}

snippet apt
abbr create apt inspec
  describe apt('${1:#:path}') do
    it { should exist }
    it { should be_enabled }
  end
${0}

# Add snippet for audit_policy

# Add snippet for auditd

# Add snippet for auditd_conf

snippet bash
abbr create bash inspec
  describe bash('${1:#:command}') do
    it { should exist }
    its('exit_status') { should eq 0 }
  end
${0}

# Add snippet for bond

# Add snippet for bridge

# Add snippet for bsd_service

# Add snippet for chocolatey_package

snippet command 
abbr create command inspec
  describe command('${1:#:command}') do
    it { should exist }
    its('${2:#:property}') { should cmp '${3:#:value}' }
  end
${0}

snippet cpan 
abbr create cpan inspec
  describe cpan('${1:#:package_name}') do
    it { should be_installed }
  end
${0}

snippet cran 
abbr create cran inspec
  describe cran('${1:#:package_name}') do
    it { should be_installed }
  end
${0}

snippet crontab
abbr create crontab inspec
  describe crontab('${1:#:user}') do
		its('${2:#:command}') { should include '${3:#:path}' }
		its('hours') { should cmp '*' }
		its('minutes') { xhould cmp '*' }
		its('doys') { xhould cmp '*' }
		its('months') { xhould cmp '*' }
	end
${0}

# Add snippet for csv

# Add snippet for dh_params

snippet directory
abbr create directory inspec
  describe directory('${1:#:path}') do
    it { should exist }
    its('${2:#:property}') { should cmp '${3:#:value}' }
  end
${0}

snippet docker_containers
abbr test for exisitance of a container
  describe docker.containers do
    its('${1:#:images}') { should_not include '${2:#:value}' }
  end
${0}

snippet docker_containers_where
abbr test for exisitance of a running container
  describe docker.containers.where { names == '${1:#:name}' } do
		it { should be_running }
  end
${0}

snippet docker_images
abbr test for exisitance of an image
  describe docker.image do
    its('${1:#:repositories}') { should_not include '${2:#:image}' }
  end
${0}

snippet docker_images_where
abbr test for exisitance of a image
  describe docker.images.where { repositories == '${1:#:repo}' } do
		it { should_not exist }
  end
${0}




# vim: ts=2 noexpandtab


